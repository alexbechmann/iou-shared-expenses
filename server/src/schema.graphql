type Transaction {
  _id: String
  title: String!
  purchase: Purchase
  isSecure: Boolean
  transactionDate: Date
  amount: Int
  formattedAmount: String
  transactionType: TransactionType
  currency: Currency
}

type Date {
  iso: String
  timestamp: String
}

type TransactionType {
  typeId: Int
  name: String
}

type Currency {
  typeId: Int
  name: String
}

input CreateTransactionInput {
  title: String!
}

input PatchTransactionInput {
  _id: String!
  title: String
}

type Purchase {
  _id: String
  title: String!
  transactions: [Transaction]
}

input CreatePurchaseInput {
  _id: String
  title: String!
  transactions: [CreateTransactionInput]
}

type Query {
  getTransactions: [Transaction]
  getPurchases: [Purchase]
}

type Mutation {
  createTransaction(transaction: CreateTransactionInput): Transaction
  updateTransaction(id: String!, transaction: PatchTransactionInput): Transaction
  deleteTransaction(id: String!): Boolean
}

type User {
 _id: String
 facebookId: String
 preferredCurrencyId: String
 displayName: String
 friends: [User]
 email: String
}